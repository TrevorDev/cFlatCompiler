/* typedefs */
typedef int km_per_hour;
typedef int points[3];

int z = 2, a[3] = {1, 2, 3}, b[5] = {0};
char c, d = 'A';
float e = 3.0, f = 3.0e6, g = -0.5;


/* functions */
void unused_function(int a)
{
	x = x + 1;
}

void another_unused_function(int a, char b, float c)
{
	return 0;
} 

float subtract_a_litte_bit(float f)
{
	return f - 0.05;
}

void increment(float f)
{
	/* this works because C flat passes by reference */
	f = f + 1.0;
}

int main(void)
{
	float f, g, h;
	f = 1.0;

	if (f > 0.5) {
		while (f >= 0.0) {
			f = f - 0.1;
			f = subtract_a_litte_bit(f);
			putc('S');
		}
	}
	else {
		puti(-1);
	}

	/* We support this! */
	float ff, gg, hh;

	if (f > 1000.0) {
		puti(-1);
	}
	else {
		for (f = 0.0; f < 10.0; f++) {
			increment(f);
			f = f + 1.0;
		}
	}

	putf(0.0);
	return 0;
}