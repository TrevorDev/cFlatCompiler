typedef int integer;

/* Recursively determine then return the factorial of n */
int factorial(int n)
{
	int ret;

	if (n > 0) {
		ret = factorial(n - 1) * n;
	}
	else {
		ret = 1;
	}
	return ret;
}

/* The super computer sciencey recurive Ackermann function */
int ackermann(int m, int n)
{
	int ret;
    if (m == 0) {
    	ret = n + 1;
    }
    else if (n == 0) {
    	ret = ackermann(m - 1, 1);
    }
    else {
    	ret = ackermann(m - 1, ackermann(m, n - 1));
    }
    return ret;
}

/* Recursively generate the nth Fibonacci number */
int fibonacci(int n)
{
	if (!n)             return 0;
	else if (n == 1)    return 1;
	else                return fibonacci(n - 1) + fibonacci(n - 2);
} 

int main()
{
	integer i;
	for (i = 0; i < 30; i++) {
		puti(fibonacci(i));
		putc(' ');
	}

	
    return 1;
}